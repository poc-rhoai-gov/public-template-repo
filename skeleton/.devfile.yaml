schemaVersion: 2.2.2
metadata:
  name: ${{values.component_id}}
  displayName: Python
  description: "Python (version 3.9.x) is an interpreted, object-oriented, high-level programming language with dynamic semantics.
    Its high-level built in data structures, combined with dynamic typing and dynamic binding, make it very attractive for Rapid Application Development, as well as for use as a scripting or glue language to connect existing components together."
  icon: https://raw.githubusercontent.com/devfile-samples/devfile-stack-icons/main/python.svg
  tags:
    - Python
    - Pip
    - Flask
  projectType: Python
  language: Python
  provider: Red Hat
  version: 2.2.0
components:
  - name: py
    container:
      image: registry.access.redhat.com/ubi9/python-39:1-192.1722518946
      args: ['tail', '-f', '/dev/null']
      mountSources: true
      endpoints:
        - name: https-python
          targetPort: 8080
          protocol: https
        - exposure: none
          name: debug
          targetPort: 5858
      env:
        - name: DEBUG_PORT
          value: '5858'
{%- if values.verify_commits == 'enabled' %}
      volumeMounts:
        - name: home
          path: /projects/home
  - name: home
    volume:
      size: 4Gi
  - name: rhtas-cosign
    container:
      args:
        - '-c'
        - >-
          mkdir -p /projects/home/bin && cp -vf /usr/local/bin/cosign-linux-amd64.gz /projects/home/bin/cosign.gz
      command:
        - /bin/bash
      image: registry.redhat.io/rhtas/cosign-rhel9:1.0.0
      sourceMapping: /projects
      mountSources: true
      memoryLimit: 256M
      volumeMounts:
      - name: home
        path: /projects/home
  - name: rhtas-gitsign
    container:
      args:
        - '-c'
        - >-
          mkdir -p /projects/home/bin && cp -vf /usr/local/bin/gitsign_cli_linux_amd64.gz /projects/home/bin/gitsign.gz
      command:
        - /bin/bash
      image: registry.redhat.io/rhtas/gitsign-rhel9:1.0.0
      sourceMapping: /projects
      mountSources: true
      memoryLimit: 256M
      volumeMounts:
      - name: home
        path: /projects/home
  - name: rhtas-rekor
    container:
      args:
        - '-c'
        - >-
          mkdir -p /projects/home/bin && cp -vf /usr/local/bin/rekor_cli_linux_amd64.gz /projects/home/bin/rekor-cli.gz
      command:
        - /bin/bash
      image: registry.redhat.io/rhtas/rekor-cli-rhel9:1.0.0
      sourceMapping: /projects
      mountSources: true
      memoryLimit: 256M
      volumeMounts:
      - name: home
        path: /projects/home
  - name: rhtas-clis-unzip
    container:
      args:
        - '-c'
        - >-
          mkdir -p /projects/home/bin && ls -l /projects/home/bin && gunzip -c /projects/home/bin/cosign.gz > /projects/home/bin/cosign && chmod +x /projects/home/bin/cosign && rm -f /projects/home/bin/cosign.gz && gunzip -c /projects/home/bin/gitsign.gz > /projects/home/bin/gitsign && chmod +x /projects/home/bin/gitsign && rm -f /projects/home/bin/gitsign.gz && gunzip -c /projects/home/bin/rekor-cli.gz > /projects/home/bin/rekor-cli && chmod +x /projects/home/bin/rekor-cli && rm -f /projects/home/bin/rekor-cli.gz
      command:
        - /bin/bash
      image: registry.access.redhat.com/ubi9/toolbox@sha256:47d4891b3e744f5622a31bd21a42dd51358c43bbfd44860cc05c7b29cc520e66
      sourceMapping: /projects
      mountSources: true
      memoryLimit: 256M
      volumeMounts:
      - name: home
        path: /projects/home
{%- endif %}
commands:
  - id: pip-install-requirements
    exec:
      commandLine: pip install -r requirements.txt
      workingDir: ${PROJECT_SOURCE}
      group:
        kind: build
        isDefault: true
      component: py
  - id: run-app
    exec:
      commandLine: 'python app.py'
      workingDir: ${PROJECT_SOURCE}
      component: py
      group:
        kind: run
        isDefault: true
  - id: debug-py
    exec:
      commandLine: 'pip install debugpy && python -m debugpy --listen 0.0.0.0:${DEBUG_PORT} app.py'
      workingDir: ${PROJECT_SOURCE}
      component: py
      group:
        kind: debug
{%- if values.verify_commits == 'enabled' %}
  - apply:
      component: rhtas-cosign
      label: Copy Cosign CLI
    id: cp-cosign-clis
  - apply:
      component: rhtas-gitsign
      label: Copy Gitsign CLI
    id: cp-gitsign-clis
  - apply:
      component: rhtas-rekor
      label: Copy Rekor CLI
    id: cp-rekor-clis
  - apply:
      component: rhtas-clis-unzip
      label: Unzip RHTAS CLIs
    id: cp-rhtas-clis-unzip
  - id: init-gitsign
    exec:
      label: "Initialize gitsign"
      component: py
      workingDir: /home/user
      commandLine: |
        git config --global user.email '${{values.owner}}@demo.redhat.com'
        git config --global user.name '${{values.owner}}'
        git config --global commit.gpgsign true
        git config --global tag.gpgsign true
        git config --global gpg.x509.program /projects/home/bin/gitsign
        git config --global gpg.format x509
        git config --global gitsign.fulcio https://fulcio-server-trusted-artifact-signer${{values.cluster}}
        git config --global gitsign.issuer https://keycloak-rhsso${{values.cluster}}/auth/realms/openshift
        git config --global gitsign.rekor https://rekor-server-trusted-artifact-signer${{values.cluster}}
        git config --global gitsign.clientid trusted-artifact-signer
      group:
        kind: build
        isDefault: true
events:
  preStart:
    - cp-cosign-clis
    - cp-gitsign-clis
    - cp-rekor-clis
    - cp-rhtas-clis-unzip
  postStart:
    - init-gitsign
{%- endif %}